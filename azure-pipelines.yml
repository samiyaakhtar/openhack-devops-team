# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo "az login -u $HACKER_LOGIN -p $HACKER_PASSWORD"
    az login -u $HACKER_LOGIN -p $HACKER_PASSWORD

    #DEBUG
    echo "Build Flavor:" $buildFlavor
    echo "Resource Group:" $resourceGroupName
    echo "Image:" $imageTag
    echo "Relative save location:" $relativeSaveLocation
    echo "DNS Url:" $dnsUrl

    #get the acr repository id to tag image with.
    ACR_ID=`az acr list -g $resourceGroupName --query "[].{acrLoginServer:loginServer}" --output json | jq .[].acrLoginServer | sed 's/\"//g'`

    echo "ACR ID: "$ACR_ID

    #Get the acr admin password and login to the registry
    acrPassword=$(az acr credential show -n $registryName -o json | jq -r '[.passwords[0].value] | .[]')

    docker login $ACR_ID -u $registryName -p $acrPassword
    echo "Authenticated to ACR with username and password"

    TAG=$ACR_ID"/devopsoh/"$imageTag

    echo "TAG: "$TAG

    pushd $relativeSaveLocation/openhack-devops-team/apis/poi/web

    docker build . -t $TAG

    docker push $TAG

    echo -e "\nSuccessfully pushed image: "$TAG
  displayName: 'Run a multi-line script'
  env:
    HACKER_LOGIN: $(HACKER_LOGIN)
    HACKER_PASSWORD: $(HACKER_PASSWORD)
    imageTag: 3.5
    relativeSaveLocation: ""
